types = {
    type[event] = {
        path = "game/events"
    }
    type[skipevent] = {
        path = "game/common/anomalies"
        skip_root_key = { any }
    }
    type[skipspecificevent] = {
        path = "game/common/anomalies"
        skip_root_key = { skip }
    }
    type[subtypeset] = {
        skip_root_key = tests
        path = "game/common/ship_sizes"
        ##type_key_filter = subtype1
        subtype[subtype1] = { }
    }
    ## type_key_filter <> tests
    type[pred_type] = {
        path = "game/common/ship_sizes"
    }
}

event = {
    ## cardinality = 0..inf
    set_test = value_set[test]
    ## cardinality = 0..inf
    get_test = value[test]

    ## cardinality = 0..inf
    save_var = value_set[variable]
    ## cardinality = 0..inf
    scope_field = {
        test = test
    }

    ## cardinality = 0..inf
    use_variable = variable_field

    ## cardinality = 0..inf
    use_variable_32 = variable_field_32

    ## cardinality = 0..inf
    subtypetest_root = value[subtype_root]
    ## cardinality = 0..inf
    subtypetest_1 = value[subtype_1]

    ## cardinality = 0..inf
    predefvalue = value[predefined]
    
    ## cardinality = 0..inf
    valuefieldrule = value_field
}

skipevent = {
    ## cardinality = 0..inf
    set_test = value_set[skipevent]
    ## cardinality = 0..inf
    get_test = value[skipevent]

    ## cardinality = 0..inf
    specific_set_test = scalar
    ## cardinality = 0..inf
    specific_get_test = scalar
}

skipspecificevent = {
    ## cardinality = 0..inf
    specific_set_test = value_set[specificskipevent]
    ## cardinality = 0..inf
    specific_get_test = value[specificskipevent]

}

values = {
    value[variable] = {
        my_preset_variable
        five<pred_type>
        six@<pred_type>
    }
}

subtypeset = {
    ## cardinality = 0..inf
    subtype_set = value_set[subtype_root]
    ## cardinality = 0..inf
    subtype_get = value[subtype_root]
    subtype[subtype1] = {
        ## cardinality = 0..inf
        subtype_set_1 = value_set[subtype_1]
        ## cardinality = 0..inf
        subtype_get_1 = value[subtype_1]
    }
}

enums = {
    enum[test_enum] = {
        twenty
        twentyone
    }
}